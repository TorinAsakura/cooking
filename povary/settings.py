#!encoding:utf-8from django.utils.translation import ugettext_lazy as _import os, sysPRJ_DIR = os.path.realpath(os.path.dirname(__file__))sys.path.append(os.path.join(PRJ_DIR, 'apps'))DEBUG = TrueTEMPLATE_DEBUG = DEBUGADMINS = (    ('Yuri Ignatko', 'vaiodomains@gmail.com'),)MANAGERS = (    ("Yuri Ignatko", "vaiodomains@gmail.com"),)MANAGERS = ADMINSDATABASES = {    'default': {        'ENGINE': 'django.db.backends.mysql',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.        'NAME': 'povary_2013',                 # Or path to database file if using sqlite3.        'USER': 'root',                        # Not used with sqlite3.        'PASSWORD': '',                     # Not used with sqlite3.        'HOST': '',                            # Set to empty string for localhost. Not used with sqlite3.        'PORT': '',        'OPTIONS': {        "init_command": "SET foreign_key_checks = 0;",        },    }}# ADMIN_MEDIA_PREFIX = '/static/admin/'# Local time zone for this installation. Choices can be found here:# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name# although not all choices may be available on all operating systems.# On Unix systems, a value of None will cause Django to use the same# timezone as the operating system.# If running in a Windows environment this must be set to the same as your# system time zone.TIME_ZONE = 'Europe/Kiev'# Language code for this installation. All choices can be found here:# http://www.i18nguy.com/unicode/language-identifiers.htmlLANGUAGE_CODE = 'ru-Ru'SITE_ID = 1# If you set this to False, Django will make some optimizations so as not# to load the internationalization machinery.USE_I18N = True# If you set this to False, Django will not format dates, numbers and# calendars according to the current locale.USE_L10N = True# If you set this to False, Django will not use timezone-aware datetimes.USE_TZ = True# Absolute filesystem path to the directory that will hold user-uploaded files.# Example: "/home/media/media.lawrence.com/media/"MEDIA_ROOT = os.path.join(PRJ_DIR, 'media')# URL that handles the media served from MEDIA_ROOT. Make sure to use a# trailing slash.# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"MEDIA_URL = '/media/'# Absolute path to the directory static files should be collected to.# Don't put anything in this directory yourself; store your static files# in apps' "static/" subdirectories and in STATICFILES_DIRS.# Example: "/home/media/media.lawrence.com/static/"STATIC_ROOT = os.path.join(PRJ_DIR, 'static_collected')# URL prefix for static files.# Example: "http://media.lawrence.com/static/"STATIC_URL = '/static/'# Additional locations of static filesSTATICFILES_DIRS = (    # Put strings here, like "/home/html/static" or "C:/www/django/static".    # Always use forward slashes, even on Windows.    # Don't forget to use absolute paths, not relative paths.    os.path.join(PRJ_DIR, 'static'),)# List of finder classes that know how to find static files in# various locations.STATICFILES_FINDERS = (    'django.contrib.staticfiles.finders.FileSystemFinder',    'django.contrib.staticfiles.finders.AppDirectoriesFinder',#    'django.contrib.staticfiles.finders.DefaultStorageFinder',)ADMIN_MEDIA_PREFIX = STATIC_URL + "grappelli/"# Make this unique, and don't share it with anybody.SECRET_KEY = 'q*vwps6)2-(1817uexko+kobxn0q8kcak471i6y#84$5ku*1rf'# List of callables that know how to import templates from various sources.TEMPLATE_LOADERS = (    'django.template.loaders.filesystem.Loader',    'django.template.loaders.app_directories.Loader',#     'django.template.loaders.eggs.Loader',)MIDDLEWARE_CLASSES = (    'django.middleware.common.CommonMiddleware',    'django.contrib.sessions.middleware.SessionMiddleware',    'django.middleware.csrf.CsrfViewMiddleware',    'django.contrib.auth.middleware.AuthenticationMiddleware',    'django.contrib.messages.middleware.MessageMiddleware',    # Uncomment the next line for simple clickjacking protection:    'django.middleware.clickjacking.XFrameOptionsMiddleware',    #'povary.middleware.LoginUserOnForum',    'povary.middleware.ActiveUserMiddleware')TEMPLATE_CONTEXT_PROCESSORS = (    "django.contrib.auth.context_processors.auth",    "django.core.context_processors.debug",    "django.core.context_processors.i18n",    "django.core.context_processors.media",    "django.core.context_processors.static",    "django.core.context_processors.tz",    "django.contrib.messages.context_processors.messages",    "django.core.context_processors.request",    "povary.context_processors.default_avatar",    "povary.context_processors.category_list",    "povary.context_processors.comment_form",)ROOT_URLCONF = 'povary.urls'# Python dotted path to the WSGI application used by Django's runserver.WSGI_APPLICATION = 'povary.wsgi.application'TEMPLATE_DIRS = (    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".    # Always use forward slashes, even on Windows.    # Don't forget to use absolute paths, not relative paths.    os.path.join(PRJ_DIR, 'templates'),)PROJECT_APPS = (    'core',    'profiles',    'recipes',    'gallery',    'competitions',    'forum_integration',    'comments',    'utils',    'ingredients',    'search',    'statistics',    'categories',    'notifications',    'fileupload',    'django_countries',    'events',    'articles',    'tags',    'master_class',    'cakegallery',    'wiki',    'stopwords',    'pages',    'subscriptions',    'ranking',    "file_resubmit",    'seo_v2',    'regions',)INSTALLED_APPS = (    'grappelli',    'filebrowser',    'django.contrib.auth',    'django.contrib.contenttypes',    'django.contrib.sessions',    'django.contrib.sites',    'django.contrib.messages',    'django.contrib.staticfiles',    'django.contrib.admin',    'django.contrib.admindocs',    'django.contrib.formtools',    'django.contrib.markup',    # Foreign apps    'south',    'registration',    'setman',    'kombu.transport.django',    'djcelery',    'sorl.thumbnail',    'haystack',    'pymorphy',    'widget_tweaks',    'markitup',    'pytils',    'autocomplete_light',) + PROJECT_APPSimport djcelerydjcelery.setup_loader()# A sample logging configuration. The only tangible logging# performed by this configuration is to send an email to# the site admins on every HTTP 500 error when DEBUG=False.# See http://docs.djangoproject.com/en/dev/topics/logging for# more details on how to customize your logging configuration.LOGGING = {    'version': 1,    'disable_existing_loggers': False,    'formatters': {        'simple': {            'format': '%(levelname)s %(message)s'        },    },    'filters': {        'require_debug_false': {            '()': 'django.utils.log.RequireDebugFalse'        }    },    'handlers': {        'mail_admins': {            'level': 'ERROR',            'filters': ['require_debug_false'],            'class': 'django.utils.log.AdminEmailHandler'        },        'console':{            'level':'DEBUG',            'class':'logging.StreamHandler',            'formatter': 'simple'        },        'file':{            'level': 'DEBUG',            'class': 'logging.FileHandler',            'filename': 'povary/log/error.log',        }    },    'loggers': {        'django.request': {            'handlers': ['mail_admins'],            'level': 'ERROR',            'propagate': True,        },        'django.request': {            'handlers': ['file'],            'level': 'ERROR',            'propagate': True        },#        'cities_light': {#            'handlers':['console'],#            'propagate': True,#            'level':'DEBUG',#        },    }}ACCOUNT_ACTIVATION_DAYS = 7REGISTRATION_OPEN = TrueAUTHENTICATION_BACKENDS = (    # 'django.contrib.auth.backends.ModelBackend',    'profiles.auth_backend.AuthBackend',)SOUTH_TESTS_MIGRATE = FalseSESSION_COOKIE_NAME = "session_id"BROKER_BACKEND = 'django'HAYSTACK_CONNECTIONS = {    'default': {        'ENGINE': 'xapian_backend.XapianEngine',        'PATH': os.path.join(os.path.dirname(__file__), 'xapian_index')    },}HAYSTACK_XAPIAN_LANGUAGE = 'ru'GEOIP_LIBRARY_PATH = '/usr/local/Cellar/geoip/1.5.1/lib/libGeoIP.dylib'GEOIP_PATH = os.path.join(PRJ_DIR, 'geoip')CITIES_FILES = {    'postal_code':  {        'filename': 'UA.zip',        'urls': ['http://download.geonames.org/export/dump/'+'{filename}']    }}CITIES_PLUGINS = []CACHES = {    'default': {        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',    },    "file_resubmit": {        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',        "LOCATION": '/tmp/file_resubmit/'    },}# THUMBNAILS & WATERMARKMARK_FILE_PATH = os.path.join(PRJ_DIR, 'static', 'img', 'logo_watermark.png')THUMBNAIL_QUALITY = 100# TEXT proccessingMARKITUP_SET = 'markitup/sets/markdown'MARKITUP_FILTER = ('markdown.markdown', {'safe_mode': True})PYMORPHY_DICTS = {    'ru': {        'dir': os.path.join(PRJ_DIR, "morphology/ru.cdb-json/"),        'backend': 'cdb',    },}# SEOSEO_EXTRA_FIELDS = (    ("bottom_desc", _(u"Нижний блок")),)SEO_FOR_MODELS = (    "master_class.models.MasterClass",    "articles.models.Article",)# Number of seconds of inactivity before a user is marked offlineUSER_ONLINE_TIMEOUT = 60 * 5# Number of seconds that we will keep track of inactive users for before# their last seen is removed from the cacheUSER_LASTSEEN_TIMEOUT = 60 * 60 * 24 * 7try:    from settings_local import *    INSTALLED_APPS = LOCAL_APPS + INSTALLED_APPSexcept:    print "No local settings"    EMAIL_USE_TLS = True    EMAIL_HOST = 'smtp.gmail.com'    EMAIL_HOST_USER = 'povarysmtp@gmail.com'    EMAIL_HOST_PASSWORD = 'wwwdotp0varydotru'    EMAIL_PORT = 587    BROKER_HOST = "localhost"    BROKER_PORT = 5672    BROKER_USER = "guest"    BROKER_PASSWORD = "guest"    BROKER_VHOST = "/"    FORUM_DB_NAME = 'povary_upd'    FORUM_DB_USER = 'povary_user'    FORUM_DB_PASS = 'everyb0dylikecooking'    FORUM_DB_HOST = '176.9.1.236'    FORUM_DB_PORT = ''    FORUM_DB_PREFIX = ''    FORUM_API_KEY = '10caebc2305c1d87bac5fbd6fafa6800'    FORUM_API_MODULE = 'ipb'if "celeryd" in sys.argv:    DEBUG = False