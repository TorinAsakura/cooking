# -*- coding: utf-8 -*-
from django.db import models


class USAIngredient(models.Model):
	published = models.BooleanField(u"Опубликовано", default=False)
	updatable = models.BooleanField(u"Обновлять из xls", default=True)
	translated = models.BooleanField(u"Переведен", default=False)
	ndb_no = models.PositiveIntegerField(u"Идентификатор исходной БД", unique=True)
	short_description = models.CharField(u"Оригинальное название", max_length=255, blank=True, null=True)
	name_rus = models.CharField(u"Русское название", max_length=255, null=True)
	water = models.FloatField(u"Вода", help_text=u"г.", blank=True, null=True)
	energy = models.FloatField(u"Калории", help_text=u"ккал", blank=True, null=True)
	protein = models.FloatField(u"Белок", help_text=u"г.", blank=True, null=True)
	lipid_total = models.FloatField(u"Жиры общие", help_text=u"г.", blank=True, null=True)
	ash = models.FloatField(u"Золы, шлаки", help_text=u"г.", blank=True, null=True)
	carbohydrt = models.FloatField(u"Углеводы", help_text=u"г.", blank=True, null=True)
	fiber_td = models.FloatField(u"Клетчатка", help_text=u"г.", blank=True, null=True)
	sugar_total = models.FloatField(u"Сахар", help_text=u"г.", blank=True, null=True)
	calcium = models.FloatField(u"Кальций", help_text=u"мг.", blank=True, null=True)
	iron = models.FloatField(u"Железо", help_text=u"мг.", blank=True, null=True)
	magnesium = models.FloatField(u"Магний", help_text=u"мг.", blank=True, null=True)
	phosphorus = models.FloatField(u"Фосфор", help_text=u"мг.", blank=True, null=True)
	potassium = models.FloatField(u"Калий", help_text=u"мг.", blank=True, null=True)
	sodium = models.FloatField(u"Натрий", help_text=u"мг.", blank=True, null=True)
	zinc = models.FloatField(u"Цинк", help_text=u"мг.", blank=True, null=True)
	copper = models.FloatField(u"Медь", help_text=u"мг.", blank=True, null=True)
	manganese = models.FloatField(u"Марганец", help_text=u"мг.", blank=True, null=True)
	selenium = models.FloatField(u"Селен", help_text=u"мкг.", blank=True, null=True)
	vitamin_c = models.FloatField(u"Витамин С", help_text=u"мг.", blank=True, null=True)
	thiamin = models.FloatField(u"Тиамин (Витамин В1)", help_text=u"мг.", blank=True, null=True)
	riboflavin = models.FloatField(u"Рибофлавин (Витамин B2)", help_text=u"мг.", blank=True, null=True)
	niacin = models.FloatField(u"Ниацин (Витамин PP)", help_text=u"мг.", blank=True, null=True)
	panto_acid = models.FloatField(u"Пантотеновая кислота (Витамин B3,B5)", help_text=u"мг.", blank=True, null=True)
	vitamin_b6 = models.FloatField(u"Витамин B6", help_text=u"мг.", blank=True, null=True)
	folate_total = models.FloatField(u"Фолиева кислота (общее)", help_text=u"мкг.", blank=True, null=True)
	folic_acid= models.FloatField(help_text=u"мкг.", blank=True, null=True)
	food_folate = models.FloatField(u"Питание фолиевой кислоты", help_text=u"мкг.", blank=True, null=True)
	folate_dfe = models.FloatField(u"Фолиевой кислоты DFE", help_text=u"мкг.", blank=True, null=True)
	choline_total = models.FloatField(u"Холин Витамин группы B4", help_text=u"мг.", blank=True, null=True)
	vitamin_b12 = models.FloatField(u"Витамин B12", help_text=u"мкг.", blank=True, null=True)
	vitamin_a_ui = models.FloatField(u"Витамин A IU", blank=True, null=True)
	vitamin_a_rae = models.FloatField(u"Витамин A RAE", blank=True, null=True)
	retinol = models.FloatField(u"Ретинол Витамин А", help_text=u"мкг.", blank=True, null=True)
	alpha_carot = models.FloatField(u"А каротин", help_text=u"мкг.", blank=True, null=True)
	beta_carot = models.FloatField(u"Б каротин", help_text=u"мкг.", blank=True, null=True)
	beta_crypt = models.FloatField(u"Бета Криптоксантин", help_text=u"мкг.", blank=True, null=True)
	lycopene = models.FloatField(u"Ликопин", help_text=u"мкг.", blank=True, null=True)
	lut_zea = models.FloatField(u"Лютеина зеаксантина", help_text=u"мкг.", blank=True, null=True)
	vitamin_e = models.FloatField(u"Витамин E", help_text=u"мг.", blank=True, null=True)
	vitamin_d = models.FloatField(u"Витамин D", help_text=u"мкг.", blank=True, null=True)
	vi_vit_d_ui = models.FloatField(u"Витамин D", blank=True, null=True)
	vitamin_k = models.FloatField(u"Витамин K", help_text=u"мкг.", blank=True, null=True)
	fa_sat = models.FloatField(u"Жирные кислоты, составляют насыщенные", help_text=u"г.", blank=True, null=True)
	fa_mono = models.FloatField(u"Жирные кислоты, общий мононенасыщенные", help_text=u"г.", blank=True, null=True)
	fa_poly = models.FloatField(u"Жирные кислоты, общий полиненасыщенных", help_text=u"г.", blank=True, null=True)
	cholestrl = models.FloatField(u"Холестерин", help_text=u"мг.", blank=True, null=True)
	gm_wt1 = models.FloatField(blank=True, null=True)
	gmwt_desc1 = models.CharField(max_length=255, blank=True, null=True)
	gmwt_2 = models.FloatField(blank=True, null=True)
	gmwt_desc2 = models.CharField(max_length=255, blank=True, null=True)
	refuse_pct = models.FloatField(blank=True, null=True)

	def __unicode__(self):
		return self.name_rus

	class Meta:
		verbose_name = u"Ингредиент"
		verbose_name_plural = u"Ингредиенты"